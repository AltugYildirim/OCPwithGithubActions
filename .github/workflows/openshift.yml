# This workflow will set up the oc CLI in your GitHub Action workflow and deploy your application to your OpenShift cluster.
#
# This workflow assumes you already have access to an OpenShift cluster.
# For instructions to get started with OpenShift see https://www.openshift.com/try
#
# To configure this workflow:
#
# 1. Set up a secret in your repository named OPENSHIFT_SERVER_URL with the value of your OpenShift server URL.
# 
# 2. Set up another secret named API_TOKEN with the value of a valid token to authenticate to OpenShift.
#
# 3. Change the values for the PROJECT and APP_NAME environment variables  (below).
#
# For more information on the OpenShift Action, refer to https://github.com/redhat-developer/openshift-actions
name: Build and Deploy to OpenShift
on:
  push:
    branches:
      - stage
      - main

# Environment variables available to all jobs and steps in this workflow
env:
  PROJECT: helm-charts
  APP_NAME: myapp
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

jobs:
  build:
    if: github.ref == 'refs/heads/stage' &&  github.event_name == 'push'
    name: CI
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
  
    - name: Container Building and Pushing
      run: |
       docker login quay.io -u altugyildirim -p ${{ secrets.QUAYTOKEN }} 
       docker build . -t quay.io/altugyildirim/reversewords:${{ github.run_id }} -f Dockerfile
       docker push quay.io/altugyildirim/reversewords:${{ github.run_id }}
  staging:
    if: github.ref == 'refs/heads/stage' &&  github.event_name == 'push'
    name: CD -Staging
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up oc CLI and deploy to OpenShift
      uses: redhat-developer/openshift-actions@v2.1.0
      with:
        version: '4.5'
        openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_URL }}
        parameters: '{"apitoken": "${{ secrets.API_TOKEN }}", "acceptUntrustedCerts": "true" }' 
        cmd: |
          oc project ${PROJECT}

    - name: Helm Install
      run: |
        helm list
        helm upgrade -f ./charts/values.yaml reverseword-stage ./charts --set environment=stage --set namespace=reverse-word-stage

  prod:
    if: github.ref == 'refs/heads/main' &&  github.event_name == 'push'
    name: CD -Production
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up oc CLI and deploy to OpenShift
      uses: redhat-developer/openshift-actions@v2.1.0
      with:
        version: '4.5'
        openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_URL }}
        parameters: '{"apitoken": "${{ secrets.API_TOKEN }}", "acceptUntrustedCerts": "true" }' 
        cmd: |
          oc project ${PROJECT}

    - name: Helm Install
      run: |
        helm list
        helm upgrade -f ./charts/values.yaml reverseword ./charts --set environment=prod --set namespace=reverse-word-prod

  pull-request:
    if: github.ref == 'refs/heads/stage' &&  github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: staging
    steps:
    - uses: actions/checkout@v1
    - name: pull-request
      uses: repo-sync/pull-request@v2
      with:
        source_branch: ""                     # If blank, default: triggered branch
        destination_branch: "main"          # If blank, default: master
        pr_title: "Pulling ${{ github.run_id }} into main"
        pr_body: ":crown: *An automated PR*"  # Full markdown support, requires pr_title to be set
        #pr_reviewer: "wei,worker"             # Comma-separated list (no spaces)
        #pr_assignee: "wei,worker"             # Comma-separated list (no spaces)
        pr_label: "auto-pr"                   # Comma-separated list (no spaces)
        #pr_milestone: "Milestone 1"           # Milestone name
        github_token: ${{ secrets.TOKEN }}
      
